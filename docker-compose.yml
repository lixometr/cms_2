version: "3.9"
services:
  nginx:
    image: nginx      
    ports:
      - "${NGINX_PORT}:80"
      - "${NGINX_PORT_SSL}:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=${NGINX_PORT}
      - NGINX_PORT_SSL=${NGINX_PORT_SSL}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - API_PORT=${API_PORT}
      - HOST=${HOST}
      - API_HOST=${API_HOST}
      - ADMIN_HOST=${ADMIN_HOST}
    networks: 
      - web
    volumes: 
      - ./templates:/etc/nginx/templates
      - ./admin:/admin
      - ./frontend:/frontend
      - ./api:/api
      - ./ssl:/etc/letsencrypt
    depends_on: 
      - frontend
      - api
  # admin:
  #   volumes:
  #     - ./admin:/admin
  #     - /admin/node_modules
  #     - ./common:/common
  #   build:
  #     context: .
  #     dockerfile: ./admin/Dockerfile
  #     target: "${NODE_ENV}"
  #   ports:
  #     - ${ADMIN_PORT}:${ADMIN_PORT}
  #   environment: 
  #     - ADMIN_PORT=${ADMIN_PORT}
  #     - NODE_ENV=${NODE_ENV}
  #   depends_on:
  #     - api

  frontend:
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
      - ./common:/common
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: "${NODE_ENV}"
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    environment: 
      - FRONTEND_PORT=${FRONTEND_PORT}
      - NODE_ENV=${NODE_ENV}
    networks:
      - web
    depends_on:
      - api
  api:
    volumes:
     - ./api:/api
     - /api/node_modules
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: "${NODE_ENV}"
    ports:
      - ${API_PORT}:${API_PORT}
    environment: 
      - API_PORT=${API_PORT}
      - NODE_ENV=${NODE_ENV}
    #command: sh -c "npm install && npm run start:dev"

    networks:
      - backend
      - web
    depends_on:
      - db
  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: 
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      #MYSQL_ROOT_HOST: '%'
    volumes:
      - data:/var/lib/mysql
    networks:
      - backend
   
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./:/var/www/cms
    depends_on:
      - nginx
    command: certonly --webroot --email lixometr@gmail.com --agree-tos --no-eff-email --force-renewal -w /var/www/cms/ -d st-cms.ru -d admin.st-cms.ru -d api.st-cms.ru 

  # adminer:
  #   image: adminer:4.6.3-standalone
  #   ports:
  #     - 8075:8080 
  #   networks:
  #     - backend
  #     - web
  #   depends_on:
  #     - db
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   restart: always
  #   environment:
  #     - PMA_ARBITRARY=0
  #     - PMA_USER=${DB_USER}
  #     - PMA_PASSWORD=${DB_PASSWORD}
  #     - PMA_CONTROLUSER=${PHP_MY_ADMIN_USER}
  #     - PMA_CONTROLPASS=${PHP_MY_ADMIN_PASSWORD}
  #     - PHPMYADMIN_ALLOW_REMOTE_CONNECTIONS=no
  #     - DATABASE_ALLOW_NO_PASSWORD=no
  #   networks:
  #     - backend
  #   ports:
  #     - "8075:80"
networks:
  backend: 
  web:
volumes: 
  data: {}