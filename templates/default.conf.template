server {

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	server_name ${HOST};

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 0;
    gzip_types text/plain application/javascript text/css text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		proxy_pass http://frontend:${FRONTEND_PORT};
		proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_http_version 1.1;
	}
    location /.well-known/acme-challenge/ { root /frontend; }
    listen [::]:443;
    listen 443; 
    ssl_certificate /etc/letsencrypt/live/${HOST}/cert.pem; # managed by Certbot
    ssl_certificate_key etc/letsencrypt/live/${HOST}/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    error_page   500 502 503 504  /50x.html;
  

   
}



server {

	server_name ${API_HOST};

	location / {
		proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
	    proxy_cache_bypass $http_upgrade;
		proxy_set_header  X-Real-IP  $remote_addr;
		proxy_http_version 1.1;
        proxy_pass http://api:${API_PORT};
	}
    location /.well-known/acme-challenge/ { root /api; }

    listen [::]:80; 
    listen 80; 
    #ssl_certificate /etc/letsencrypt/live/${HOST}/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/${HOST}/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {

	server_name ${ADMIN_HOST};
	root /admin/dist/;
	location / {
		try_files $uri /index.html;
		
	}
    location /.well-known/acme-challenge/ { root /admin; }

    listen [::]:80;
    listen 80; 
    #ssl_certificate /etc/letsencrypt/live/${HOST}/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/${HOST}/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = ${HOST}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 ;

	server_name ${HOST};
    return 404; # managed by Certbot


}



#server {
    #if ($host = ${API_HOST}) {
    #    return 301 https://$host$request_uri;
    #} 


	#listen 80;
	#listen [::]:80;

	#server_name ${API_HOST};
    #return 404; # managed by Certbot


#}
#server {
    #if ($host = ${ADMIN_HOST}) {
    #    return 301 https://$host$request_uri;
    #} 


	#listen 80;
	#listen [::]:80;

	#server_name ${ADMIN_HOST};
    #return 404; 


#}